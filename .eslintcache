[{"C:\\Users\\USER\\Desktop\\dine-space\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\dine-space\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\dine-space\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Reservation.js":"4","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Calendar.js":"5","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Date.js":"6","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Arrival.js":"7","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Menu.js":"8","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Person.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":576,"mtime":1612706609119,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":7815,"mtime":1612774162000,"results":"14","hashOfConfig":"11"},{"size":7907,"mtime":1612963266131,"results":"15","hashOfConfig":"11"},{"size":3536,"mtime":1612774970888,"results":"16","hashOfConfig":"11"},{"size":4865,"mtime":1612787710089,"results":"17","hashOfConfig":"11"},{"size":1202,"mtime":1612709426610,"results":"18","hashOfConfig":"11"},{"size":6665,"mtime":1612787612379,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1i56e7c",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\USER\\Desktop\\dine-space\\src\\index.js",[],["41","42"],"C:\\Users\\USER\\Desktop\\dine-space\\src\\App.js",[],"C:\\Users\\USER\\Desktop\\dine-space\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Reservation.js",[],"C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Calendar.js",["43","44"],"C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Date.js",[],"C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Arrival.js",["45","46","47","48","49"],"import React, { useState } from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport { TimerSharp } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '32%',\r\n        backgroundColor: '#ffffff',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        borderRadius: '6px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    date: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: '30px 0',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    dateTxt: {\r\n        color: '#FC6C44',\r\n        fontWeight: 'bold',\r\n        marginLeft: '8px',\r\n        fontSize: '24px',\r\n        fontFamily: \"Eina03-SemiBold\"\r\n    },\r\n    time: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n        overflowY: 'auto'\r\n    },\r\n    timeList: {\r\n        margin: '4px 0',\r\n        width: '56%',\r\n        opacity: '17%',\r\n        padding: '12px 28px',\r\n        fontFamily: \"Eina03-SemiBold\"\r\n    },\r\n    active: {\r\n        borderTop: '3px solid #5B6BC8',\r\n        borderBottom: '3px solid #5B6BC8',\r\n        opacity: '1',\r\n        fontFamily: \"Eina03-SemiBold\"\r\n    },\r\n    select: {\r\n        border: 'none',\r\n        marginRight: '8px',\r\n        fontWeight: 'bold',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n        fontSize: '18px'\r\n    },\r\n\r\n}));\r\n\r\nfunction Arrival() {\r\n    var x = 15; //minutes interval\r\n    var times = []; // time array\r\n    var tt = 0; // start time\r\n    // var ap = ['AM', 'PM']; // AM-PM\r\n\r\n    //loop to increment the time and push results in array\r\n    for (var i = 0; tt < 24 * 60; i++) {\r\n        var hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\r\n        var mm = (tt % 60); // getting minutes of the hour in 0-55 format\r\n        times[i] = (\"0\" + (hh % 12)).slice(-2) + ':' + (\"0\" + mm).slice(-2); // pushing data in array in [00:00 - 12:00 AM/PM format]\r\n        tt = tt + x;\r\n    }\r\n\r\n\r\n    const num = [1, 2, 3, 4, 5];\r\n    let date = new Date();\r\n    let currentMinutes = date.getMinutes();\r\n    let minutes = [0, 15, 30, 45]\r\n    if (currentMinutes <= 15) {\r\n        currentMinutes = 15\r\n    }\r\n    else if (currentMinutes <= 30) {\r\n        currentMinutes = 30\r\n    }\r\n    else if (currentMinutes <= 45) {\r\n        currentMinutes = 45\r\n    }\r\n    else if (currentMinutes > 45) {\r\n        currentMinutes = 0\r\n    }\r\n    let currentTime = date.getHours() + ':' + currentMinutes;\r\n\r\n    const timeList = ['ASAP', times[0], times[1], times[2], times[3], '14:00']\r\n    const zero = 0;\r\n    const [time, setTime] = useState(zero);\r\n\r\n    window.onLoad = function () {\r\n        document.getElementById('time123').addEventListener('scroll', () => {\r\n            console.log('jjj')\r\n        }, true);\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container className={classes.container}>\r\n                <Grid className={classes.date}>\r\n                    <img alt=\"date\" src={'/photos/clock.svg'} />\r\n                    <Typography className={classes.dateTxt}>Arrival Time</Typography>\r\n                </Grid>\r\n                <Grid className={classes.time}\r\n                >\r\n                    {num.map((row, idx) => (\r\n                        <div id='time123' className={idx === 2 ? clsx(classes.timeList, classes.active) : classes.timeList} key={idx}\r\n                            onClick={() => {\r\n                                setTime(zero + idx);\r\n                                let paragraph = document.createElement('Typography');\r\n                                paragraph.className = classes.select;\r\n                                let text = document.createTextNode(times[idx]);\r\n                                paragraph.appendChild(text);\r\n                                var elem = document.getElementById('12345');\r\n                                elem.replaceChild(paragraph, elem.childNodes[1])\r\n                            }}\r\n                        // onScroll={window.onload = function () { document.getElementById('time123').style.backgroundColor = 'red' }}\r\n                        >{times[idx]}\r\n                        </div>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Arrival","C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Menu.js",[],"C:\\Users\\USER\\Desktop\\dine-space\\src\\components\\Person.js",["50","51"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: '#ffffff',\r\n        boxShadow: ' 0 0 10px #A0A2AA',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        borderRadius: '6px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: 'flex-start',\r\n        },\r\n    },\r\n    group: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        padding: '24px',\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            padding: '12px 6px'\r\n        },\r\n    },\r\n    block: {\r\n        width: 'auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: 'flex-start',\r\n        },\r\n    },\r\n    gridOpen: {\r\n        width: '45%',\r\n        right: '24px',\r\n        top: '100px',\r\n        position: 'absolute',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '50%',\r\n            left: 0,\r\n            top: '300px'\r\n        },\r\n    },\r\n    gridClosed: {\r\n        display: 'none'\r\n    },\r\n    txt: {\r\n        fontWeight: 'bold',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n        fontSize: '20px',\r\n        marginLeft: '6px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: '0',\r\n            marginBottom: '16px'\r\n        },\r\n    },\r\n    persons: {\r\n        margin: '0 6px',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n    },\r\n    button: {\r\n        fontSize: '18px',\r\n        padding: '12px 64px',\r\n        marginRight: '24px',\r\n        backgroundColor: '#FC6C44',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n        color: '#ffffff',\r\n        '&:hover': {\r\n            background: '#FC6C44',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginBottom: '6px',\r\n            marginLeft: 3,\r\n        },\r\n    },\r\n    clear: {\r\n        fontSize: '20px',\r\n        fontWeight: 'normal',\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer',\r\n        marginLeft: '24px',\r\n        fontFamily: \"Eina03-SemiBold\",\r\n        padding: '24px 0',\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: 0,\r\n            marginBottom: '6px',\r\n            marginLeft: 6,\r\n        },\r\n    },\r\n    add: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderTop: '1px solid #E5E5E5',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'flex-start'\r\n        },\r\n    },\r\n    select: {\r\n        border: 'none',\r\n        fontSize: '18px',\r\n        marginRight: '8px',\r\n        fontWeight: 'bold',\r\n    },\r\n    opacity: {\r\n        opacity: '0.4'\r\n    },\r\n    img: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction Person(props) {\r\n    const classes = useStyles();\r\n    const [person, setPerson] = useState(1);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container className={classes.group}>\r\n                <Grid container className={classes.block}>\r\n                    <img alt='person' src={'/photos/persons.svg'} />\r\n                    <Typography className={classes.txt}>Group Size</Typography>\r\n                </Grid>\r\n                <Grid container className={classes.block}>\r\n                    <img className={person === 1 ? classes.opacity : classes.img} alt='minus' src={'/photos/min.svg'}\r\n                        onClick={() => {\r\n                            if (person > 1) {\r\n                                setPerson(person - 1)\r\n                                let paragraph = document.createElement('Typography');\r\n                                paragraph.className = classes.select;\r\n                                let text = document.createTextNode(person - 1 + ' ' + 'People');\r\n                                if (person === 2) {\r\n                                    text = document.createTextNode('1 Person');\r\n                                }\r\n                                paragraph.appendChild(text);\r\n                                var elem = document.getElementById('1234');\r\n                                elem.replaceChild(paragraph, elem.childNodes[1])\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Typography className={classes.persons}>{person} Person</Typography>\r\n                    <img alt='plus' src={'/photos/plus.svg'} className={classes.img}\r\n                        onClick={() => {\r\n                            setPerson(person + 1)\r\n                            let paragraph = document.createElement('Typography');\r\n                            paragraph.className = classes.select;\r\n                            let text = document.createTextNode(person + 1 + ' ' + 'People');\r\n                            paragraph.appendChild(text);\r\n                            var elem = document.getElementById('1234');\r\n                            elem.replaceChild(paragraph, elem.childNodes[1])\r\n\r\n                        }} />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.add}>\r\n                <Typography className={person > 1 ? classes.clear : clsx(classes.clear, classes.opacity)}\r\n                    onClick={() => {\r\n                        setPerson(1)\r\n                        let paragraph = document.createElement('Typography');\r\n                        paragraph.className = classes.select;\r\n                        let text = document.createTextNode('1 Person');\r\n                        paragraph.appendChild(text);\r\n                        var elem = document.getElementById('1234');\r\n                        elem.replaceChild(paragraph, elem.childNodes[1])\r\n                    }}\r\n                >Clear all</Typography>\r\n                <Button onClick={props.click} num={person} className={classes.button}>DONE</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PersonFunction(props) {\r\n    const classes = useStyles();\r\n    const show = props.show;\r\n    return (\r\n        <Grid className={show ? classes.gridOpen : classes.gridClosed}>\r\n            <Person click={props.click} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonFunction",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":133,"column":11,"nodeType":"58","messageId":"59","endLine":133,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":196,"column":9,"nodeType":"58","messageId":"59","endLine":196,"endColumn":16},{"ruleId":"56","severity":1,"message":"61","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":20},{"ruleId":"56","severity":1,"message":"62","line":93,"column":9,"nodeType":"58","messageId":"59","endLine":93,"endColumn":16},{"ruleId":"56","severity":1,"message":"63","line":106,"column":9,"nodeType":"58","messageId":"59","endLine":106,"endColumn":20},{"ruleId":"56","severity":1,"message":"64","line":108,"column":11,"nodeType":"58","messageId":"59","endLine":108,"endColumn":19},{"ruleId":"56","severity":1,"message":"65","line":110,"column":12,"nodeType":"58","messageId":"59","endLine":110,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":143,"column":85,"nodeType":"68","messageId":"69","endLine":143,"endColumn":86},{"ruleId":"66","severity":1,"message":"67","line":159,"column":81,"nodeType":"68","messageId":"69","endLine":159,"endColumn":82},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'today' is assigned a value but never used.","Identifier","unusedVar","'unshift' is assigned a value but never used.","'TimerSharp' is defined but never used.","'minutes' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'timeList' is assigned a value but never used.","'time' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]